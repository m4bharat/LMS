// <auto-generated />
using System;
using LotteryAPI.DbInfra.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LotteryAPI.Migrations
{
    [DbContext(typeof(ContestDbContext))]
    [Migration("20231216213621_usertabl")]
    partial class usertabl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LotteryAPI.DbInfra.Model.ContestDetail", b =>
                {
                    b.Property<int>("ContestDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContestDetailId"));

                    b.Property<string>("ContestDetailBannerImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContestDetailDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContestDetailTileImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContestDetailTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ContestDrawDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ContestDrawTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ContestEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ContestEndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ContestNumberOfWinners")
                        .HasColumnType("int");

                    b.Property<DateTime>("ContestStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ContestStartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ContestTicketPrice")
                        .HasColumnType("int");

                    b.Property<int>("ContestTotalBoughtTicket")
                        .HasColumnType("int");

                    b.Property<int>("ContestTotalTicket")
                        .HasColumnType("int");

                    b.Property<int>("ContestValue")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DrawContestNumbers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsResultPublished")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("ContestDetailId");

                    b.ToTable("ContestDetails");
                });

            modelBuilder.Entity("LotteryAPI.DbInfra.Model.ContestResult", b =>
                {
                    b.Property<int>("ContestResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContestResultId"));

                    b.Property<int>("ContestDetailId")
                        .HasColumnType("int");

                    b.Property<int>("ContestWinnerRank")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LotteryNumberId")
                        .HasColumnType("int");

                    b.Property<int>("LotteryNumberMatchCount")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("ContestResultId");

                    b.ToTable("ContestResults");
                });

            modelBuilder.Entity("LotteryAPI.DbInfra.Model.LotteryNumbers", b =>
                {
                    b.Property<int>("LotteryNumbersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LotteryNumbersId"));

                    b.Property<int>("BonusNumber")
                        .HasColumnType("int");

                    b.Property<int>("ContestDetailId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LotteryNumber1")
                        .HasColumnType("int");

                    b.Property<int>("LotteryNumber2")
                        .HasColumnType("int");

                    b.Property<int>("LotteryNumber3")
                        .HasColumnType("int");

                    b.Property<int>("LotteryNumber4")
                        .HasColumnType("int");

                    b.Property<int>("LotteryNumber5")
                        .HasColumnType("int");

                    b.Property<string>("PaymentTransactionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LotteryNumbersId");

                    b.ToTable("LotteryNumbers");
                });

            modelBuilder.Entity("UserIdentity.Service.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
